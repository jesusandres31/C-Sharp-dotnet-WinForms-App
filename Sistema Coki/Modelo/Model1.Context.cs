//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sistema_Coki.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GestionVentasEntities : DbContext
    {
        public GestionVentasEntities()
            : base("name=GestionVentasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cliente> cliente { get; set; }
        public virtual DbSet<factura_cabecera> factura_cabecera { get; set; }
        public virtual DbSet<pedido_detalle> pedido_detalle { get; set; }
        public virtual DbSet<producto> producto { get; set; }
        public virtual DbSet<proveedor> proveedor { get; set; }
        public virtual DbSet<tipo_usuario> tipo_usuario { get; set; }
        public virtual DbSet<tipo_venta> tipo_venta { get; set; }
        public virtual DbSet<usuario> usuario { get; set; }
    
        public virtual ObjectResult<factura_Result> factura(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<factura_Result>("factura", idParameter);
        }
    
        public virtual ObjectResult<mejores_clientes_Result> mejores_clientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mejores_clientes_Result>("mejores_clientes");
        }
    
        public virtual ObjectResult<mejores_fechas_Result> mejores_fechas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mejores_fechas_Result>("mejores_fechas");
        }
    
        public virtual ObjectResult<mejores_vendedores_Result> mejores_vendedores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mejores_vendedores_Result>("mejores_vendedores");
        }
    
        public virtual ObjectResult<producto_fecha_Result> producto_fecha(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<producto_fecha_Result>("producto_fecha", fechaParameter);
        }
    
        public virtual ObjectResult<producto_mas_vend_Result> producto_mas_vend()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<producto_mas_vend_Result>("producto_mas_vend");
        }
    
        public virtual ObjectResult<producto_proveedor_Result> producto_proveedor(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<producto_proveedor_Result>("producto_proveedor", idParameter);
        }
    
        public virtual ObjectResult<RealizarBackUp_Result> RealizarBackUp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RealizarBackUp_Result>("RealizarBackUp");
        }
    
        public virtual ObjectResult<reparto_Result> reparto(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reparto_Result>("reparto", fechaParameter);
        }
    }
}
